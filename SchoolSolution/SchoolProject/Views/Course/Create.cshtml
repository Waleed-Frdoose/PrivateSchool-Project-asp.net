@model SchoolProject.Models.Course

@{
    ViewData["Title"] = "Create";
}

<div class="container mt-5">
    <h1 class="display-4">Create Course</h1>



        <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
            <div class="form-group">
            <label asp-for="CourseName" class="font-weight-bold">Course Name</label>
            <input asp-for="CourseName" class="form-control" placeholder="Enter course name" />
                <span asp-validation-for="CourseName" class="text-danger"></span>
            </div>
        <br />
            <div class="form-group">
            <label asp-for="CourseCapicity" class="font-weight-bold">Course Capicity</label>
            <input asp-for="CourseCapicity" class="form-control" placeholder="Enter course capicity" />
                <span asp-validation-for="CourseCapicity" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
            <label asp-for="TeacherId" class="font-weight-bold">Teacher</label>
                <select asp-for="TeacherId" class ="form-control" asp-items="ViewBag.TeacherId">
                    @{
                        var x = new SchoolProject.Context.AppDbContext();
                        foreach (var t in x.Teachers)
                        {
                            <option value="@t.TeacherId" >@t.TeacherName</option>
                        }

                   }
                    
                </select>
            </div>
            
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
   
<p></p>

    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
